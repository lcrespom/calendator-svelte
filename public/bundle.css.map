{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.html",
    "../src/events.html",
    "../src/calendar.html",
    "../src/event.html",
    "../src/month.html",
    "../src/form-group.html"
  ],
  "sourcesContent": [
    "<div id=\"main\">\n    <Events {events}\n        on:addEvent=\"addEvent()\"\n        on:updateEvent=\"updateEvent(event)\"\n        on:deleteEvent=\"deleteEvent(event)\"\n    />\n    <Calendar {events} />\n</div>\n\n<style>\n    #main {\n    \tposition: relative;\n    }\n</style>\n\n<script>\n    import { randomColor, getContrastingColor, date2html } from './utils.js'\n\n    export default {\n        components: {\n            Events: './events.html',\n            Calendar: './calendar.html'\n        },\n        data() {\n            return {\n                events: []\n            }\n        },\n        methods: {\n            addEvent() {\n                let { events } = this.get()\n                let newEvent = {\n                    id: Date.now(),\n                    name: '',\n                    color: randomColor(),\n                    start: date2html(new Date()),\n                    duration: 1,\n                    every: 1,\n                    repeat: 1\n                }\n                events = [newEvent, ...events]\n                this.set({ events })\n            },\n            updateEvent(event) {\n                let { events } = this.get()\n                event.txtcolor = getContrastingColor(event.color)\n                this.set({ events })\n            },\n            deleteEvent(event) {\n                let { events } = this.get()\n                let newEvents = events.filter(e => e != event)\n                this.set({ events: newEvents })\n            }\n        }\n    }\n</script>",
    "<div id=\"events\">\n\t<div style=\"text-align: center\">\n\t\t<button class=\"btn btn-primary\" on:click=\"fire('addEvent')\">\n\t\t\tAdd event\n\t\t</button>\n\t</div>\n\t<div id=\"event-list\">\n\t\t{#each events as event (event.id)}\n\t\t\t<Event {event} on:deleteEvent on:updateEvent />\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n\t#events {\n\t\tposition: fixed;\n\t\twidth: 16rem;\n\t\tpadding-right: 1rem;\n\t\tborder-right: 2px solid #eee;\n\t\theight: calc(100% - 2rem);\n\t\toverflow-y: auto;\n\t\tfont-size: 90%;\n\t\tpadding: 1ex;\n\t}\n</style>\n\n<script>\n\texport default {\n\t\tcomponents: {\n\t\t\tEvent: './event.html'\n\t\t}\n\t}\n</script>",
    "<div id=\"calendar\">\n\t{#each months as month}\n\t\t<Month\n\t\t\tname={month.name}\n\t\t\tmonth={month.mnum}\n\t\t\tyear={month.year}\n\t\t\t{eventMap}\n\t\t/>\n\t{/each}\n</div>\n\n<style>\n\t#calendar {\n\t\tposition: absolute;\n\t\tleft: 17rem;\n\t\twidth: calc(100% - 18rem);\n\t}\n</style>\n\n<script>\n\timport { date2html } from './utils'\n\n\tlet MONTHS = [\n\t\t'January', 'February', 'March', 'April',\n\t\t'May', 'June', 'July', 'August',\n\t\t'September', 'October', 'November', 'December'\n\t]\n\n\tfunction initMonths() {\n\t\tlet months = []\n\t\tlet today = new Date()\n\t\tlet month = today.getMonth()\n\t\tlet year = today.getFullYear()\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tlet j = month + i\n\t\t\tif (j === 12) year++\n\t\t\tlet mnum = j % 12\n\t\t\tlet name = `${MONTHS[mnum]} ${year}`\n\t\t\tmonths.push({ name, mnum, year })\n\t\t}\n\t\treturn months\n\t}\n\n\tfunction initEventMap(events) {\n\t\tlet eventMap = {}\n\t\tfor (let event of events) {\n\t\t\tlet startDate = new Date(event.start)\n\t\t\tfor (let i = 0; i < event.repeat; i++) {\n\t\t\t\tlet d = new Date(startDate.getTime())\n\t\t\t\tfor (let j = 0; j < event.duration; j++) {\n\t\t\t\t\tlet dayId = date2html(d)\n\t\t\t\t\tif (eventMap[dayId] === undefined) eventMap[dayId] = []\n\t\t\t\t\teventMap[dayId].push(event)\n\t\t\t\t\td.setDate(d.getDate() + 1)\n\t\t\t\t}\n\t\t\t\tstartDate.setDate(startDate.getDate() + event.every)\n\t\t\t}\n\t\t}\n\t\treturn eventMap\n\t}\n\n\texport default {\n\t\tcomponents: {\n\t\t\tMonth: './month.html'\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tmonths: initMonths()\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\teventMap: ({ events }) => initEventMap(events)\n\t\t}\n\t}\n</script>",
    "<div>\n\t<hr/>\n\t<FormGroup label=\"Name\" name=\"name\"\n\t\tbind:value=\"event.name\" focus />\n\t<FormGroup label=\"Color\" type=\"color\" name=\"color\"\n\t\tbind:value=\"event.color\" />\n\t<FormGroup label=\"Start\" type=\"date\" name=\"start\"\n\t\tbind:value=\"event.start\" />\n\t<FormGroup label=\"Duration\" type=\"number\" name=\"duration\"\n\t\tafter=\"day(s)\" attrs={{ min: 1, step: 1 }}\n\t\tbind:value=\"event.duration\" />\n\t<FormGroup label=\"Every\" type=\"number\" name=\"every\"\n\t\tafter=\"day(s)\" attrs={{ min: 1, step: 1 }}\n\t\tbind:value=\"event.every\" />\n\t<FormGroup label=\"Repeat\" type=\"number\" name=\"repeat\"\n\t\tafter=\"time(s)\" attrs={{ min: 1, step: 1 }}\n\t\tbind:value=\"event.repeat\" />\n\t<div class=\"form-group\">\n\t\t<button\n\t\t\ton:click=\"fireDeleteEvent()\"\n\t\t\tclass=\"btn btn-sm btn-warning\">\n\t\t\tRemove event\n\t\t</button>\n\t</div>\n</div>\n\n<style>\n\tbutton {\n\t\tmargin-top: 0.5em;\n\t\tmargin-left: 5em;\n\t\ttext-align: center;\n\t}\n</style>\n\n<script>\n\texport default {\n\t\tcomponents: {\n\t\t\tFormGroup: './form-group.html'\n\t\t},\n\t\tmethods: {\n\t\t\tfireDeleteEvent() {\n\t\t\t\tlet { event } = this.get()\n\t\t\t\tthis.fire('deleteEvent', event)\n\t\t\t},\n\t\t\tfireUpdateEvent() {\n\t\t\t\tlet { event } = this.get()\n\t\t\t\tthis.fire('updateEvent', event)\n\t\t\t}\n\t\t},\n\t\tonupdate({ current, previous }) {\n\t\t\tif (previous)\n\t\t\t\tthis.fireUpdateEvent()\n\t\t}\n\t}\n</script>",
    "<div class=\"cal-month-block\">\n\t<h2>{name}</h2>\n\t<div class=\"cal-month\">\n\t\t{#each weekdays as weekday}\n\t\t\t<span class=\"cal-weekday\">{weekday}</span>\n\t\t{/each}\n\t\t{#each days as day}\n\t\t\t<div class=\"cal-day {day.isEmpty ? 'cal-empty' : ''}\">\n\t\t\t\t{#if !day.isEmpty}\n\t\t\t\t\t<div class=\"cal-cell\">\n\t\t\t\t\t\t{day.daynum}\n\t\t\t\t\t\t{#each getEvents(day.daynum, year, month, eventMap) as event}\n\t\t\t\t\t\t\t<div class=\"cal-event\"\n\t\t\t\t\t\t\t\tstyle={eventStyle(event)}>\n\t\t\t\t\t\t\t\t{event.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n.cal-month-block {\n\tmargin-bottom: 1rem;\n}\n\n.cal-month {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n\tgrid-gap: 1ex;\n\tmargin: 0 auto;\n\tpadding: 0;\n}\n\n.cal-weekday {\n\ttext-align: center\n}\n\n.cal-day {\n\ttext-align: center;\n\tpadding: 50% 0;\n\tbackground: #F0F0F0;\n\tposition: relative;\n}\n\n.cal-empty {\n\tbackground: white;\n}\n\n.cal-cell {\n\tposition: absolute;\n    top: 1ex;\n    left: 0;\n    bottom: 0;\n    right: 0;\n}\n\n.cal-event {\n\tborder-radius: 5px;\n\tmargin: 0 0.25rem 4px;\n\toverflow: hidden;\n\tfont-size: 75%;\n}\n</style>\n\n<script>\n\timport { getMonthWeeks, dayOfWeek, daysInMonth, date2html } from './utils'\n\n\tfunction initDays(mnum, year) {\n\t\tlet days = []\n\t\tlet totalDays = getMonthWeeks(mnum, year) * 7\n\t\tlet daynum = 1 - dayOfWeek(new Date(year, mnum, 1))\n\t\tlet dim = daysInMonth(mnum, year)\n\t\tfor (let i = 1; i <= totalDays; i++) {\n\t\t\tlet isEmpty = daynum <= 0 || daynum > dim\n\t\t\tdays.push({ daynum, dim, mnum, year, isEmpty })\n\t\t\tdaynum++\n\t\t}\n\t\treturn days\n\t}\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tweekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tdays: ({ month, year }) => initDays(month, year)\n\t\t},\n\t\thelpers: {\n\t\t\tgetEvents(daynum, year, month, eventMap) {\n\t\t\t\tlet dayId = date2html(new Date(year, month, daynum))\n\t\t\t\tlet events = eventMap[dayId]\n\t\t\t\tif (!events) events = []\n\t\t\t\treturn events\n\t\t\t},\n\t\t\teventStyle(event) {\n\t\t\t\treturn `background-color: ${event.color}; color: ${event.txtcolor}`\n\t\t\t}\n\t\t}\n\t}\n</script>",
    "<div class=\"form-group\">\n\t<label>{label}</label>\n\t<input ref:input type={c_type} {value} on:input=\"changed(event)\"\n\t\tclass=\"form-control\" />\n\t&nbsp;{c_after}\n</div>\n\n<style>\n\t.form-control {\n\t\tdisplay: inline-block;\n\t\theight: 2rem;\n\t\tfont-size: 100%;\n\t}\n\n\t.form-control[type=text], .form-control[type=date] {\n\t\twidth: 10rem;\n\t}\n\n\t.form-control[type=color] {\n\t\twidth: 3em;\n\t\tpadding: 0.25ex 0.5ex;\n\t}\n\n\t.form-control[type=number] {\n\t\twidth: 4.5em;\n\t}\n\n\t.form-group {\n\t\tmargin-bottom: 1ex;\n\t}\n\n\tlabel {\n\t\tdisplay: inline-block;\n\t\twidth: 4em;\n\t\ttext-align: right;\n\t\tmargin-right: 1ex;\n\t\tfont-weight: bold;\n\t}\n</style>\n\n<script>\n\texport default {\n\t\tcomputed: {\n\t\t\tc_type: (props) => props.type || 'text',\n\t\t\tc_after: (props) => props.after || ''\n\t\t},\n\t\tmethods: {\n\t\t\tchanged(evt) {\n\t\t\t\tlet { type } = this.get()\n\t\t\t\tlet value = evt.target.value\n\t\t\t\tif (type == 'number' && value)\n\t\t\t\t\tvalue = parseInt(value)\n\t\t\t\tthis.set({ value })\n\t\t\t}\n\t\t},\n\t\toncreate() {\n\t\t\tlet { attrs, focus } = this.get()\n\t\t\tif (focus)\n\t\t\t\tthis.refs.input.focus()\n\t\t\tif (attrs)\n\t\t\t\tfor (let aname in attrs)\n\t\t\t\t\tthis.refs.input.setAttribute(aname, attrs[aname])\n\t\t}\n\t}\n</script>"
  ],
  "names": [],
  "mappings": "AAUI,KAAK,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,AACnB,CAAC;ACEJ,OAAO,cAAC,CAAC,AACR,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IAAI,CACnB,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC5B,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACzB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,GAAG,AACb,CAAC;ACXD,SAAS,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACX,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,AAC1B,CAAC;ACWD,MAAM,cAAC,CAAC,AACP,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,MAAM,AACnB,CAAC;ACNF,gBAAgB,eAAC,CAAC,AACjB,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,GAAG,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,CAAC,AACX,CAAC,AAED,YAAY,eAAC,CAAC,AACb,UAAU,CAAE,MAAM;AACnB,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CAAC,CAAC,CACd,UAAU,CAAE,OAAO,CACnB,QAAQ,CAAE,QAAQ,AACnB,CAAC,AAED,UAAU,eAAC,CAAC,AACX,UAAU,CAAE,KAAK,AAClB,CAAC,AAED,SAAS,eAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,AACZ,CAAC,AAED,UAAU,eAAC,CAAC,AACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CACrB,QAAQ,CAAE,MAAM,CAChB,SAAS,CAAE,GAAG,AACf,CAAC;ACzDA,aAAa,cAAC,CAAC,AACd,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,aAAa,CAAC,IAAI,CAAC,IAAI,eAAC,CAAE,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAC,CAAC,AACnD,KAAK,CAAE,KAAK,AACb,CAAC,AAED,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,cAAC,CAAC,AAC1B,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,MAAM,CAAC,KAAK,AACtB,CAAC,AAED,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,cAAC,CAAC,AAC3B,KAAK,CAAE,KAAK,AACb,CAAC,AAED,WAAW,cAAC,CAAC,AACZ,aAAa,CAAE,GAAG,AACnB,CAAC,AAED,KAAK,cAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CACjB,YAAY,CAAE,GAAG,CACjB,WAAW,CAAE,IAAI,AAClB,CAAC"
}